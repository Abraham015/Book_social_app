name: BSN Backend API Pipeline
on:
  push:
    branches:
      - CI/CD_pipeline
    paths:
      - book_social/**
      - docker/backend/**
      - .github/workflows/*-backend.yml
      - 'docker-compose.yml'

jobs:
  compile:
    runs-on: ubuntu-latest
    name: Compile project
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'corretto'
          cache: maven
      - name: Compile project
        run: |
          cd book_social
          mvn clean compile

  unit-tests:
    runs-on: ubuntu-latest
    name: Unit tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'corretto'
          cache: maven
      - name: Running unit tests
        run: |
          cd book_social
          mvn clean test

  build:
    runs-on: ubuntu-latest
    name: Build backend
    needs:
      - compile
      - unit-tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'corretto'
          cache: maven
      - name: Build project
        run: |
          cd book_social
          mvn clean package

  build-image:
    name: Build docker image
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'corretto'
          cache: maven
      - name: Extract project version
        id: extract_version
        run: |
          cd book_social
          echo "VERSION=$(./mvnw -q -Dexec.executable='echo -Dexec.args='${project.version}' --non-recursive exec:exec')">>$GITHUB_OUTPUT
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_TOKEN}}
      - name: Build and push to docker
        uses: docker/build-push-action@v5
        with:
          context: book_social
          file: docker/backend/Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{secrets.DOCKER_USERNAME}}/bsn-api:${{steps.extract_version.outputs.VERSION}},${{secrets.DOCKER_USERNAME}}/bsn-api:latest
          build-args: |
            PROFILE=dev
            APP_VERSION=${{steps.extract_version.outputs.VERSION}}

  deploy:
    name: Deploy backend
    runs-on: ubuntu-latest
    needs: build-image
    steps:
      - name: Create deployment folder
        run: ssh ${{secrets.VPS_USERNAME}}@${{secrets.VPS_IP}} "mkdir -p ci-cd"
      - name: Docker compose file
        run: scp docker-compose.yml ${{secrets.VPS_USERNAME}}@${{secrets.VPS_IP}}:ci-cd/docker-compose.yml
      - name: Set ENV variables
        run: |
          ssh ${{secrets.VPS_USERNAME}}@${{secrets.VPS_IP}}<<EOF
          export EMAIL_HOSTNAME=${{secrets.EMAIL_HOSTNAME}}
          export EMAIL_USER_NAME=${{secrets.EMAIL_USERNAME}}
          export EMAIL_PASSWORD=${{secrets.EMAIL_PASSWORD}}
          cd ci-cd
          docker-compose -f docker-compose.yml pull -q
          docker-compose -f docker-compose.yml up -d
          EOF